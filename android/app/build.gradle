plugins {
    id "com.android.application"
    id "kotlin-android"
    id "com.google.gms.google-services"
}


def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystoreProperties = new Properties()
   def keystorePropertiesFile = rootProject.file('key.properties')
   if (keystorePropertiesFile.exists()) {
       keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
   }

android {
    compileSdkVersion 33

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.helpera.mentor_app_dev"
        minSdkVersion 25
        targetSdkVersion 33
        versionCode 1
        versionName "1.0.0" 
        multiDexEnabled true
        ndk.abiFilters "armeabi", "x86", "armeabi-v7a","x86_64", "mips", 
         "mips64", "arm64-v8a"
    }

    signingConfigs {
       release {
            if (keystorePropertiesFile.exists()) {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
                v1SigningEnabled true
                v2SigningEnabled true
            }   
       }
   }

    compileOptions {
       sourceCompatibility = JavaVersion.VERSION_1_8
       targetCompatibility = JavaVersion.VERSION_1_8
   }

    buildTypes {
        release {
            shrinkResources false
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lint {
           checkReleaseBuilds false
           disable 'InvalidPackage'
       }
       namespace 'com.helpera.mentor_app_dev'
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation platform('com.google.firebase:firebase-bom:32.4.0')
    implementation 'com.google.android.gms:play-services-basement:18.1.0'
    implementation 'com.google.firebase:firebase-messaging:23.0.6'
    implementation "androidx.activity:activity-ktx:1.6.0-alpha05"
    implementation 'com.google.firebase:firebase-perf-ktx'
    implementation 'com.android.installreferrer:installreferrer:2.1'
}
